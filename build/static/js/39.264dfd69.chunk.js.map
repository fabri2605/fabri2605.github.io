{"version":3,"file":"static/js/39.264dfd69.chunk.js","mappings":"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","sources":["webpack://music_page/./src/components/SongComp.module.css?ed06","webpack://music_page/./src/components/extra/MyExtra.module.css?434e","components/extra/MyExtra.js","components/SongComp.js","components/RegisterForm.js","webpack://music_page/./src/components/Loader/myLoader.module.css?5954","components/Loader/MyLoader.js","components/nav/Nav.js","components/SpoltifyApp.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"general\":\"SongComp_general__VT5+V\",\"filter\":\"SongComp_filter__6atGf\",\"loading\":\"SongComp_loading__KkBii\",\"cartel\":\"SongComp_cartel__yhk3Z\",\"fade\":\"SongComp_fade__YgEZU\",\"title\":\"SongComp_title__hNtHG\",\"artist\":\"SongComp_artist__w7JTi\",\"spol\":\"SongComp_spol__kAthA\",\"nav\":\"SongComp_nav__6Y1VH\",\"user\":\"SongComp_user__QrDQC\",\"logout\":\"SongComp_logout__U84br\",\"fetchbutton\":\"SongComp_fetchbutton__zSJ2G\",\"myform\":\"SongComp_myform__JGVhP\"};","// extracted by mini-css-extract-plugin\nexport default {\"pulse\":\"MyExtra_pulse__LGq6h\"};","import styles from './MyExtra.module.css'\r\nconst MyExtra =()=>{\r\n    return <div className={styles.pulse} />\r\n}\r\n\r\nexport default MyExtra;","import React from 'react';\r\nimport classes from './SongComp.module.css';\r\nimport MyExtra from './extra/MyExtra';\r\nimport './extra/Transition.css'\r\nconst SongComp = (props) => {\r\n    const aud = document.getElementsByClassName('player');\r\n    const [played, setPlayed] = React.useState(false);\r\n    function secondsToString(seconds) {\r\n        var minute = Math.floor((seconds / 60) % 60);\r\n        minute = minute < 10 ? '0' + minute : minute;\r\n        var second = seconds % 60;\r\n        second = second < 10 ? '0' + Math.floor(second) : Math.floor(second);\r\n        return minute + ':' + second;\r\n    }\r\n    const imgClickHandler = (e) => {\r\n        for (const cual of aud) {\r\n            if (cual.id === props.song.name) {\r\n                cual.play();\r\n            } else {\r\n                cual.pause();\r\n            }\r\n        }\r\n    };\r\n    const playing = (e) => {\r\n        setPlayed(!document.getElementById(props.song.name).paused);\r\n        for (const cual of aud) {\r\n            cual.volume = 0.1;\r\n            if (cual.id === props.song.name) {\r\n                cual.setAttribute('controls', '');\r\n            } else {\r\n                cual.pause();\r\n                cual.removeAttribute('controls');\r\n            }\r\n        }\r\n    };\r\n    const Thunderbolt = (e) => {\r\n        setPlayed(!document.getElementById(props.song.name).paused);\r\n    };\r\n    return (\r\n            <div className={classes.cartel}>\r\n                <p className='numbers'>{secondsToString(props.song.duration)}</p>\r\n                <img\r\n                    onClick={imgClickHandler}\r\n                    alt={props.song.name}\r\n                    src={props.song.img}\r\n                ></img>\r\n                {played && <MyExtra />}\r\n                <h3 className={classes.title}>{props.song.name}</h3>\r\n                <a href={props.song.authorUrl}>\r\n                    <h5 className={classes.artist}>{props.song.author}</h5>\r\n                </a>\r\n                <div className={classes.spol}>\r\n                    <a href={props.song.url.spotify}>Listen it on Spoltify!</a>\r\n                </div>\r\n                {/*  <p>{props.song.name}</p> */}\r\n                <audio\r\n                    onPause={Thunderbolt}\r\n                    id={props.song.name}\r\n                    className='player'\r\n                    onPlay={playing}\r\n                >\r\n                    <source src={props.song.preview} type='audio/mpeg' />\r\n                </audio>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default SongComp;\r\n","import React from 'react';\r\nimport classes from './SongComp.module.css';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst RegisterForm = (props) => {\r\n    const [name, setName] = React.useState('');\r\n    const [pass, setPass] = React.useState('');\r\n    const [touched, setTouched] = React.useState(false);\r\n    const [touchedp, setTouchedp] = React.useState(false);\r\n    const [hasError, setHasError] = React.useState(false);\r\n\r\n    const key = CryptoJS.enc.Utf8.parse('b75524255a7f54d2726a951bb39204df');\r\n    const iv = CryptoJS.enc.Utf8.parse('1583288699248111');\r\n\r\n    const submitHandler = async function (e) {\r\n        setTouched(true);\r\n        e.preventDefault();\r\n        if (namevalid && passvalid) {\r\n            await fetch(\r\n                process.env.REACT_APP_FIRE_POST_LINK\r\n            )\r\n                .then((response) => response.json())\r\n                .then((response) => {\r\n                    let found = false;\r\n                    for (const key in response) {\r\n                        if (response[key].Name === name) {\r\n                            if (response[key].Password !== pass) {\r\n                                setHasError(true);\r\n                                return null;\r\n                            }\r\n                            props.submitionHandler(name, pass, true);\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        props.submitionHandler(name, pass, false);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    const setNameHandler = (e) => {\r\n        setName(e.target.value.trim());\r\n    };\r\n    const setPassHandler = (e) => {\r\n        /* const decipher = CryptoJS.AES.decrypt(cipher, key); */\r\n        const cipher = CryptoJS.AES.encrypt(e.target.value.trim(), 'PASSWORD');\r\n        setPass(e.target.value.trim());\r\n    };\r\n    const blurNameHandler = () => {\r\n        setTouched(true);\r\n    };\r\n    const blurPassHandler = () => {\r\n        setTouchedp(true);\r\n    };\r\n    const namevalid = name.length > 3;\r\n    const passvalid = pass.length > 3;\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className={classes.myform}>\r\n            <div>\r\n                <label>Username:</label>\r\n                <input\r\n                    type='text'\r\n                    onBlur={blurNameHandler}\r\n                    onChange={setNameHandler}\r\n                    value={name}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <label>Password:</label>\r\n                <input\r\n                    type='password'\r\n                    onBlur={blurPassHandler}\r\n                    onChange={setPassHandler}\r\n                    value={pass}\r\n                />\r\n            </div>\r\n            <button type='submit'>Register</button>\r\n            {!namevalid && touched && <p>Invalid username!</p>}\r\n            {!passvalid && namevalid && touchedp && <p>Invalid password!</p>}\r\n            {hasError && <p>User already in use || incorrect password!</p>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"myBody\":\"myLoader_myBody__TZD4h\",\"middle\":\"myLoader_middle__-w0va\",\"bar\":\"myLoader_bar__LVQo4\",\"loader\":\"myLoader_loader__QLoBn\",\"bar1\":\"myLoader_bar1__qzEFa\",\"bar2\":\"myLoader_bar2__ZdA2q\",\"bar3\":\"myLoader_bar3__obKST\",\"bar4\":\"myLoader_bar4__9neVb\",\"bar5\":\"myLoader_bar5__0nTCb\",\"bar6\":\"myLoader_bar6__8e5NQ\",\"bar7\":\"myLoader_bar7__j37xO\",\"bar8\":\"myLoader_bar8__IJtFL\"};","import React from 'react';\r\nimport classes from './myLoader.module.css'\r\n\r\nconst myLoader = () => {\r\n    return (\r\n        <div className={classes.myBody}>\r\n        <div className={classes.middle}>\r\n            <div className={`${classes.bar} ${classes.bar1}`}></div>\r\n            <div className={`${classes.bar} ${classes.bar2}`}></div>\r\n            <div className={`${classes.bar} ${classes.bar3}`}></div>\r\n            <div className={`${classes.bar} ${classes.bar4}`}></div>\r\n            <div className={`${classes.bar} ${classes.bar5}`}></div>\r\n            <div className={`${classes.bar} ${classes.bar6}`}></div>\r\n            <div className={`${classes.bar} ${classes.bar7}`}></div>\r\n            <div className={`${classes.bar} ${classes.bar8}`}></div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default myLoader;\r\n","import classes from '../SongComp.module.css';\r\nimport React from 'react';\r\nconst Nav = (props) => {\r\n\r\n    const pageTitle = React.createRef();\r\n\r\n    return (\r\n        <nav\r\n            className={\r\n                props.loading ? classes.loading + ' ' + classes.nav : classes.nav\r\n            }\r\n        >\r\n            <p ref={pageTitle}>\r\n                French Drillin\r\n            </p>\r\n            <button className={classes.fetchbutton} onClick={props.fetching}>\r\n                Load Songs\r\n            </button>\r\n            {!props.user ? (\r\n                <button onClick={props.showForm} className={classes.fetchbutton}>\r\n                    Register / Login\r\n                </button>\r\n            ) : (\r\n                <>\r\n                    <button className={classes.user} disabled>\r\n                        {props.user}\r\n                    </button>\r\n                    <button onClick={props.logoutHandler} className={classes.logout}>\r\n                        Log Out\r\n                    </button>\r\n                </>\r\n            )}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport SongComp from './SongComp';\r\nimport classes from './SongComp.module.css';\r\nimport RegisterForm from './RegisterForm';\r\nimport MyLoader from './Loader/MyLoader';\r\nimport Nav from './nav/Nav';\r\nimport './extra/Transition.css';\r\nimport Swal from 'sweetalert2';\r\nimport songsJson from './songs.json'\r\n\r\nconst SpoltifyApp = () => {\r\n    const [isRegistring, setIsRegistring] = React.useState(false);\r\n    const [User, setUser] = React.useState(localStorage.getItem('isLogged'));\r\n    const [songs, setSongs] = React.useState([]);\r\n    const [filtredSongs, setFiltredSongs] = React.useState([]);\r\n    const [artists, setArtists] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [hasError, setHasError] = React.useState('');\r\n\r\n    const localUser = localStorage.getItem('isLogged');\r\n    const localFilter = localStorage.getItem('filtred');\r\n\r\n    const fetching = React.useCallback(\r\n        async function () {\r\n            setIsRegistring(false);\r\n            if (!localUser) {\r\n                setFiltredSongs('');\r\n                localStorage.setItem('filtred', '');\r\n                setHasError('You need to register first!');\r\n                return null;\r\n            } else if (songs.length > 0 && filtredSongs.length === 0) {\r\n                setFiltredSongs(songs);\r\n                return null;\r\n            } else if (filtredSongs.length > 0 && songs.length > 0) {\r\n                if (localFilter) {\r\n                    setFiltredSongs(\r\n                        songs.filter((u) => u.author === localFilter)\r\n                    );\r\n                } else {\r\n                    setFiltredSongs(songs);\r\n                }\r\n                return null;\r\n            }\r\n            setIsRegistring(false);\r\n            setIsLoading(true);\r\n\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'X-RapidAPI-Key':\r\n                        process.env.REACT_APP_X_RapidAPI_Key,\r\n                    'X-RapidAPI-Host': process.env.REACT_APP_X_RapidAPI_Host,\r\n                },\r\n            };\r\n\r\n            /* await fetch(\r\n                process.env.REACT_APP_MUSIC_LINK,\r\n                options\r\n            )\r\n                .then((response) => response.json())\r\n                .then((response) => { */\r\n\r\n            console.log(songsJson);\r\n            const songis = [];\r\n            const artis = [];\r\n            for (const key in songsJson) {\r\n                if (key === 'items') {\r\n                    for (const song of songsJson[key]) {\r\n                        if (song.track) {\r\n                            songis.push({\r\n                                id: song.track.id,\r\n                                name: song.track.name,\r\n                                authorUrl: song.track.artists[0].uri,\r\n                                author: song.track.artists[0].name,\r\n                                preview: song.track.preview_url,\r\n                                img: song.track.album.images[0].url,\r\n                                url: song.track.external_urls,\r\n                                duration:\r\n                                    song.track.duration_ms * 0.001,\r\n                            });\r\n                            artis.push(song.track.artists[0].name);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            var result = [];\r\n            artis.sort();\r\n            artis.forEach((item) => {\r\n                if (result.indexOf(item) < 0) {\r\n                    result.push(item);\r\n                }\r\n            });\r\n            setArtists(result);\r\n            setSongs(songis);\r\n            if (localFilter === 'All' || !localFilter) {\r\n                console.log('localFilter == All || \"\"');\r\n                setFiltredSongs(songis);\r\n            } else {\r\n                setFiltredSongs(\r\n                    songis.filter((u) => u.author === localFilter)\r\n                );\r\n            }\r\n            /* }); */\r\n            setIsLoading(false);\r\n        },\r\n        [User, localFilter, songs]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        if (localUser === !!User) {\r\n            setUser(localUser);\r\n        }\r\n        if (localFilter) {\r\n            fetching();\r\n        }\r\n    }, []);\r\n\r\n    async function registration(name, pass, isRegistred) {\r\n        setIsLoading(true);\r\n        setIsRegistring(false);\r\n        setHasError('');\r\n        if (!isRegistred) {\r\n            const object = { Name: name, Password: pass };\r\n\r\n            try {\r\n                await fetch(\r\n                    process.env.REACT_APP_FIRE_POST_LINK,\r\n                    {\r\n                        method: 'POST',\r\n                        body: JSON.stringify(object),\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                    }\r\n                );\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n            Swal.fire(\r\n                'Registered succesfully!',\r\n                'Hope you enjoy the page!',\r\n                'success'\r\n            );\r\n        } else {\r\n            Swal.fire(\r\n                'Welcome back ' + name + ' !',\r\n                'Logged succesfully!',\r\n                'success'\r\n            );\r\n        }\r\n        setUser(name);\r\n        localStorage.setItem('isLogged', name);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const showForm = () => {\r\n        setIsRegistring(true);\r\n    };\r\n\r\n    const throwSongs = (e) => {\r\n        if (e.target.value === 'All') {\r\n            setFiltredSongs(songs);\r\n            localStorage.setItem('filtred', '');\r\n        } else {\r\n            const filtredSongss = songs.filter(\r\n                (u) => u.author === e.target.value\r\n            );\r\n            setFiltredSongs(filtredSongss);\r\n            localStorage.setItem('filtred', e.target.value);\r\n        }\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        setUser('');\r\n        setFiltredSongs([]);\r\n        localStorage.setItem('isLogged', '');\r\n        localStorage.setItem('filtred', '');\r\n        Swal.fire('Good bye!', 'Logged out succesfully!');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Nav\r\n                loading={isLoading}\r\n                fetching={fetching}\r\n                showForm={showForm}\r\n                logoutHandler={logoutHandler}\r\n                user={User}\r\n            />\r\n            {!isRegistring ? (\r\n                <div className={isLoading ? classes.loading : 'white-p'}>\r\n                    {filtredSongs.length > 0 && User && (\r\n                        <div className={classes.filter}>\r\n                            <label>Filter by artist:</label>\r\n                            <select onChange={throwSongs}>\r\n                                <option key='All' value='All'>\r\n                                    All\r\n                                </option>\r\n                                {artists.map((e) => (\r\n                                    <option key={e} value={e}>\r\n                                        {e}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    )}\r\n                    {isLoading && !hasError && (\r\n                        <div>\r\n                            <MyLoader />\r\n                        </div>\r\n                    )}\r\n                    {!hasError &&\r\n                        filtredSongs.length === 0 &&\r\n                        !isLoading &&\r\n                        !isRegistring && (\r\n                            <p>Songs list is empty, load to see them all!</p>\r\n                        )}\r\n                    {hasError && <p>{hasError}</p>}\r\n                    <div className={classes.general}>\r\n                        {!isLoading &&\r\n                            !isRegistring &&\r\n                            filtredSongs.length > 0 &&\r\n                            User &&\r\n                            filtredSongs.map((e) => {\r\n                                return <SongComp key={e.id} song={e} />;\r\n                            })}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <RegisterForm submitionHandler={registration} />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SpoltifyApp;\r\n"],"names":["className","styles","props","aud","document","getElementsByClassName","React","played","setPlayed","classes","seconds","minute","Math","floor","second","secondsToString","song","duration","onClick","e","cual","id","name","play","pause","alt","src","img","href","authorUrl","author","url","spotify","onPause","getElementById","paused","onPlay","volume","setAttribute","removeAttribute","preview","type","setName","pass","setPass","touched","setTouched","touchedp","setTouchedp","hasError","setHasError","submitHandler","CryptoJS","preventDefault","namevalid","passvalid","fetch","process","then","response","json","found","key","Name","Password","submitionHandler","length","onSubmit","onBlur","onChange","target","value","trim","pageTitle","loading","ref","fetching","user","disabled","logoutHandler","showForm","isRegistring","setIsRegistring","localStorage","getItem","User","setUser","songs","setSongs","filtredSongs","setFiltredSongs","artists","setArtists","isLoading","setIsLoading","localUser","localFilter","setItem","filter","u","method","headers","console","log","songsJson","songis","artis","track","push","uri","preview_url","album","images","external_urls","duration_ms","result","sort","forEach","item","indexOf","isRegistred","object","body","JSON","stringify","message","Swal","filtredSongss","map","MyLoader"],"sourceRoot":""}