[{"C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\index.js":"1","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\App.js":"2","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\reportWebVitals.js":"3","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\SpoltifyApp.js":"4","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\SongComp.js":"5","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\RegisterForm.js":"6","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\Loader\\MyLoader.js":"7","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\nav\\Nav.js":"8","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\extra\\MyExtra.js":"9"},{"size":535,"mtime":1653410228967,"results":"10","hashOfConfig":"11"},{"size":371,"mtime":1660484404324,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1653402388297,"results":"13","hashOfConfig":"11"},{"size":8874,"mtime":1716596558954,"results":"14","hashOfConfig":"11"},{"size":2513,"mtime":1658949225831,"results":"15","hashOfConfig":"11"},{"size":3845,"mtime":1716595736235,"results":"16","hashOfConfig":"11"},{"size":831,"mtime":1654019516779,"results":"17","hashOfConfig":"11"},{"size":1060,"mtime":1716596475696,"results":"18","hashOfConfig":"11"},{"size":138,"mtime":1654023432142,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1kzet2r",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\index.js",[],[],[],"C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\App.js",["51","52","53"],[],"\nimport { BrowserRouter as Router , useRoutes } from 'react-router-dom';\nimport './App.css';\nimport React from 'react';\nimport { Navigate } from 'react-router';\n\nconst SpoltifyApp = React.lazy(() => import('./components/SpoltifyApp'));\n\nfunction App() {\n\n    return (\n        <div className='App'>\n            <SpoltifyApp />\n        </div>\n    );\n}\n\nexport default App;\n","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\reportWebVitals.js",[],[],"C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\SpoltifyApp.js",["54","55"],[],"import React from 'react';\r\nimport SongComp from './SongComp';\r\nimport classes from './SongComp.module.css';\r\nimport RegisterForm from './RegisterForm';\r\nimport MyLoader from './Loader/MyLoader';\r\nimport Nav from './nav/Nav';\r\nimport './extra/Transition.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst SpoltifyApp = () => {\r\n    const [isRegistring, setIsRegistring] = React.useState(false);\r\n    const [User, setUser] = React.useState(localStorage.getItem('isLogged'));\r\n    const [songs, setSongs] = React.useState([]);\r\n    const [filtredSongs, setFiltredSongs] = React.useState([]);\r\n    const [artists, setArtists] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [hasError, setHasError] = React.useState('');\r\n\r\n    const localUser = localStorage.getItem('isLogged');\r\n    const localFilter = localStorage.getItem('filtred');\r\n\r\n    const fetching = React.useCallback(\r\n        async function () {\r\n            setIsRegistring(false);\r\n            if (!localUser) {\r\n                setFiltredSongs('');\r\n                localStorage.setItem('filtred', '');\r\n                setHasError('You need to register first!');\r\n                return null;\r\n            } else if (songs.length > 0 && filtredSongs.length === 0) {\r\n                setFiltredSongs(songs);\r\n                return null;\r\n            } else if (filtredSongs.length > 0 && songs.length > 0) {\r\n                if (localFilter) {\r\n                    setFiltredSongs(\r\n                        songs.filter((u) => u.author === localFilter)\r\n                    );\r\n                } else {\r\n                    setFiltredSongs(songs);\r\n                }\r\n                return null;\r\n            }\r\n            setIsRegistring(false);\r\n            setIsLoading(true);\r\n\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'X-RapidAPI-Key':\r\n                        process.env.REACT_APP_X_RapidAPI_Key,\r\n                    'X-RapidAPI-Host': process.env.REACT_APP_X_RapidAPI_Host,\r\n                },\r\n            };\r\n\r\n            await fetch(\r\n                process.env.REACT_APP_MUSIC_LINK,\r\n                options\r\n            )\r\n                .then((response) => response.json())\r\n                .then((response) => {\r\n\r\n                    console.log(response);\r\n                    const songis = [];\r\n                    const artis = [];\r\n                    for (const key in response) {\r\n                        if (key === 'items') {\r\n                            for (const song of response[key]) {\r\n                                if (song.track) {\r\n                                    songis.push({\r\n                                        id: song.track.id,\r\n                                        name: song.track.name,\r\n                                        authorUrl: song.track.artists[0].uri,\r\n                                        author: song.track.artists[0].name,\r\n                                        preview: song.track.preview_url,\r\n                                        img: song.track.album.images[0].url,\r\n                                        url: song.track.external_urls,\r\n                                        duration:\r\n                                            song.track.duration_ms * 0.001,\r\n                                    });\r\n                                    artis.push(song.track.artists[0].name);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    var result = [];\r\n                    artis.sort();\r\n                    artis.forEach((item) => {\r\n                        if (result.indexOf(item) < 0) {\r\n                            result.push(item);\r\n                        }\r\n                    });\r\n                    setArtists(result);\r\n                    setSongs(songis);\r\n                    if (localFilter === 'All' || !localFilter) {\r\n                        console.log('localFilter == All || \"\"');\r\n                        setFiltredSongs(songis);\r\n                    } else {\r\n                        setFiltredSongs(\r\n                            songis.filter((u) => u.author === localFilter)\r\n                        );\r\n                    }\r\n                });\r\n            setIsLoading(false);\r\n        },\r\n        [User, localFilter, songs]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        if (localUser === !!User) {\r\n            setUser(localUser);\r\n        }\r\n        if (localFilter) {\r\n            fetching();\r\n        }\r\n    }, []);\r\n\r\n    async function registration(name, pass, isRegistred) {\r\n        setIsLoading(true);\r\n        setIsRegistring(false);\r\n        setHasError('');\r\n        if (!isRegistred) {\r\n            const object = { Name: name, Password: pass };\r\n\r\n            try {\r\n                await fetch(\r\n                    process.env.REACT_APP_FIRE_POST_LINK,\r\n                    {\r\n                        method: 'POST',\r\n                        body: JSON.stringify(object),\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                    }\r\n                );\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n            Swal.fire(\r\n                'Registered succesfully!',\r\n                'Hope you enjoy the page!',\r\n                'success'\r\n            );\r\n        } else {\r\n            Swal.fire(\r\n                'Welcome back ' + name + ' !',\r\n                'Logged succesfully!',\r\n                'success'\r\n            );\r\n        }\r\n        setUser(name);\r\n        localStorage.setItem('isLogged', name);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const showForm = () => {\r\n        setIsRegistring(true);\r\n    };\r\n\r\n    const throwSongs = (e) => {\r\n        if (e.target.value === 'All') {\r\n            setFiltredSongs(songs);\r\n            localStorage.setItem('filtred', '');\r\n        } else {\r\n            const filtredSongss = songs.filter(\r\n                (u) => u.author === e.target.value\r\n            );\r\n            setFiltredSongs(filtredSongss);\r\n            localStorage.setItem('filtred', e.target.value);\r\n        }\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        setUser('');\r\n        setFiltredSongs([]);\r\n        localStorage.setItem('isLogged', '');\r\n        localStorage.setItem('filtred', '');\r\n        Swal.fire('Good bye!', 'Logged out succesfully!');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Nav\r\n                loading={isLoading}\r\n                fetching={fetching}\r\n                showForm={showForm}\r\n                logoutHandler={logoutHandler}\r\n                user={User}\r\n            />\r\n            {!isRegistring ? (\r\n                <div className={isLoading ? classes.loading : 'white-p'}>\r\n                    {filtredSongs.length > 0 && User && (\r\n                        <div className={classes.filter}>\r\n                            <label>Filter by artist:</label>\r\n                            <select onChange={throwSongs}>\r\n                                <option key='All' value='All'>\r\n                                    All\r\n                                </option>\r\n                                {artists.map((e) => (\r\n                                    <option key={e} value={e}>\r\n                                        {e}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    )}\r\n                    {isLoading && !hasError && (\r\n                        <div>\r\n                            <MyLoader />\r\n                        </div>\r\n                    )}\r\n                    {!hasError &&\r\n                        filtredSongs.length === 0 &&\r\n                        !isLoading &&\r\n                        !isRegistring && (\r\n                            <p style={{ margin: '80px' }}>Songs list is empty, load to see them all!</p>\r\n                        )}\r\n                    {hasError && <p>{hasError}</p>}\r\n                    <div className={classes.general}>\r\n                        {!isLoading &&\r\n                            !isRegistring &&\r\n                            filtredSongs.length > 0 &&\r\n                            User &&\r\n                            filtredSongs.map((e) => {\r\n                                return <SongComp key={e.id} song={e} />;\r\n                            })}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"50vh\" }}>\r\n\r\n                    <RegisterForm submitionHandler={registration} />\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SpoltifyApp;\r\n","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\SongComp.js",[],[],"C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\RegisterForm.js",["56","57","58"],[],"import React from 'react';\r\nimport classes from './Register.module.css';\r\nimport CryptoJS from 'crypto-js';\r\nimport { FaRegEye, FaRegEyeSlash } from \"react-icons/fa\";\r\n\r\nconst RegisterForm = (props) => {\r\n    const [name, setName] = React.useState('');\r\n    const [pass, setPass] = React.useState('');\r\n    const [seeingPass, setSeeingPass] = React.useState(false);\r\n    const [touched, setTouched] = React.useState(false);\r\n    const [touchedp, setTouchedp] = React.useState(false);\r\n    const [hasError, setHasError] = React.useState('');\r\n\r\n    const key = CryptoJS.enc.Utf8.parse('b75524255a7f54d2726a951bb39204df');\r\n    const iv = CryptoJS.enc.Utf8.parse('1583288699248111');\r\n\r\n    const submitHandler = async function (e) {\r\n        setTouched(true);\r\n        e.preventDefault();\r\n        if (namevalid && passvalid) {\r\n            await fetch(\r\n                process.env.REACT_APP_FIRE_POST_LINK\r\n            )\r\n                .then((response) => response.json())\r\n                .then((response) => {\r\n                    let found = false;\r\n                    for (const key in response) {\r\n                        if (response[key].Name === name) {\r\n                            if (response[key].Password !== pass) {\r\n                                setHasError('Incorrect password!');\r\n                                return null;\r\n                            }\r\n                            props.submitionHandler(name, pass, true);\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        props.submitionHandler(name, pass, false);\r\n                    }\r\n                });\r\n        } else {\r\n            setHasError(\"Please complete the login!\")\r\n        }\r\n    };\r\n\r\n    const setNameHandler = (e) => {\r\n        setName(e.target.value.trim());\r\n    };\r\n    const setPassHandler = (e) => {\r\n        /* const decipher = CryptoJS.AES.decrypt(cipher, key); */\r\n        const cipher = CryptoJS.AES.encrypt(e.target.value.trim(), 'PASSWORD');\r\n        setPass(e.target.value.trim());\r\n    };\r\n    const blurNameHandler = () => {\r\n        setTouched(true);\r\n    };\r\n    const blurPassHandler = () => {\r\n        setTouchedp(true);\r\n    };\r\n    const namevalid = name.length > 3;\r\n    const passvalid = pass.length > 3;\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className={classes.myform}>\r\n            <div className={classes.user}>\r\n                <label>Username:</label>\r\n                <input\r\n                    type='text'\r\n                    onBlur={blurNameHandler}\r\n                    onChange={setNameHandler}\r\n                    value={name}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.pass}>\r\n                <label>Password:</label>\r\n                <div className={classes.seePass}>\r\n                    <input\r\n                        type={seeingPass ? 'text' : 'password'}\r\n                        onBlur={blurPassHandler}\r\n                        onChange={setPassHandler}\r\n                        value={pass}\r\n                    />\r\n                    <div>\r\n                        {seeingPass ?\r\n                            <FaRegEyeSlash onClick={() => setSeeingPass((e) => !e)} color='white' />\r\n                            :\r\n                            <FaRegEye onClick={() => setSeeingPass((e) => !e)} color='white' />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type='submit' className={classes.submit}>Register</button>\r\n            {!namevalid && touched && <p>Invalid username!</p>}\r\n            {!passvalid && namevalid && touchedp && <p>Invalid password!</p>}\r\n            {hasError && <p>{hasError}</p>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\Loader\\MyLoader.js",[],[],"C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\nav\\Nav.js",[],[],"C:\\Users\\fabri\\Desktop\\Prog\\Pages\\music_page\\src\\components\\extra\\MyExtra.js",[],[],{"ruleId":"59","severity":1,"message":"60","line":2,"column":27,"nodeType":"61","messageId":"62","endLine":2,"endColumn":33},{"ruleId":"59","severity":1,"message":"63","line":2,"column":36,"nodeType":"61","messageId":"62","endLine":2,"endColumn":45},{"ruleId":"59","severity":1,"message":"64","line":5,"column":10,"nodeType":"61","messageId":"62","endLine":5,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":105,"column":9,"nodeType":"67","endLine":105,"endColumn":35,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":115,"column":8,"nodeType":"67","endLine":115,"endColumn":10,"suggestions":"70"},{"ruleId":"59","severity":1,"message":"71","line":14,"column":11,"nodeType":"61","messageId":"62","endLine":14,"endColumn":14},{"ruleId":"59","severity":1,"message":"72","line":15,"column":11,"nodeType":"61","messageId":"62","endLine":15,"endColumn":13},{"ruleId":"59","severity":1,"message":"73","line":51,"column":15,"nodeType":"61","messageId":"62","endLine":51,"endColumn":21},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useRoutes' is defined but never used.","'Navigate' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has missing dependencies: 'filtredSongs.length' and 'localUser'. Either include them or remove the dependency array.","ArrayExpression",["74"],"React Hook React.useEffect has missing dependencies: 'User', 'fetching', 'localFilter', and 'localUser'. Either include them or remove the dependency array.",["75"],"'key' is assigned a value but never used.","'iv' is assigned a value but never used.","'cipher' is assigned a value but never used.",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [filtredSongs.length, localFilter, localUser, songs]",{"range":"80","text":"81"},"Update the dependencies array to be: [User, fetching, localFilter, localUser]",{"range":"82","text":"83"},[4383,4409],"[filtredSongs.length, localFilter, localUser, songs]",[4602,4604],"[User, fetching, localFilter, localUser]"]