{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Desktop\\\\gh-pages\\\\music_page\\\\src\\\\components\\\\SpoltifyApp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SongComp from './SongComp';\nimport classes from './SongComp.module.css';\nimport RegisterForm from './RegisterForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SpoltifyApp = () => {\n  _s();\n\n  const [isRegistring, setIsRegistring] = React.useState(false);\n  const [User, setUser] = React.useState('');\n  const [songs, setSongs] = React.useState([]);\n  const [artists, setArtists] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const fetching = async function () {\n    setIsRegistring(false);\n    setIsLoading(true);\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Host': 'spotify23.p.rapidapi.com',\n        'X-RapidAPI-Key': 'fbf0c29f17msh2ea8c42d058efb8p1cb340jsn87a4660d26d6'\n      }\n    };\n    await fetch('https://spotify23.p.rapidapi.com/playlist_tracks/?id=37i9dQZF1DX4Wsb4d7NKfP&offset=0&limit=100', options).then(response => response.json()).then(response => {\n      const songis = [];\n      const artis = [];\n\n      for (const key in response) {\n        if (key === 'items') {\n          for (const song of response[key]) {\n            console.log(song.track.external_urls);\n            songis.push({\n              id: song.track.id,\n              name: song.track.name,\n              authorUrl: song.track.artists[0].uri,\n              author: song.track.artists[0].name,\n              preview: song.track.preview_url,\n              img: song.track.album.images[0].url,\n              url: song.track.external_urls,\n              duration: song.track.duration_ms * 0.001\n            });\n            artis.push(song.track.artists[0].name);\n          }\n        }\n      }\n\n      var result = [];\n      artis.forEach(item => {\n        if (result.indexOf(item) < 0) {\n          result.push(item);\n        }\n      });\n      setArtists(result);\n      setSongs(songis);\n    }).catch(err => console.error(err));\n    setIsLoading(false);\n  };\n\n  async function registration(name, pass) {\n    const object = {\n      Name: name,\n      Password: pass\n    };\n    setIsRegistring(false);\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('https://react-http-467cc-default-rtdb.firebaseio.com/users.json');\n\n      if (!response.ok) {\n        throw new Error('Error while fetching');\n      }\n\n      const data = await response.JSON();\n      console.log(data);\n    } catch (e) {\n      console.log(e.message);\n    }\n\n    try {\n      fetch('https://react-http-467cc-default-rtdb.firebaseio.com/users.json', {\n        method: 'POST',\n        body: JSON.stringify(object),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n\n    setUser(name);\n    setIsLoading(false);\n  }\n\n  const showForm = () => {\n    setIsRegistring(true);\n  };\n\n  const throwSongs = e => {\n    const filtredSongs = songs.filter(u => u.author === e.target.value);\n    setSongs(filtredSongs);\n  };\n\n  const logoutHandler = () => {\n    setUser('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: classes.nav,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.fetchbutton,\n        onClick: fetching,\n        children: \"Fetch Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), !User ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showForm,\n        className: classes.fetchbutton,\n        children: \"Register / Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.user,\n          disabled: true,\n          children: User\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logoutHandler,\n          className: classes.logout,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), !isRegistring ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [songs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.filter,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Filter by artist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: throwSongs,\n          children: artists.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: e,\n            children: e\n          }, e, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.general,\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 39\n        }, this), songs.length === 0 && !isLoading && !isRegistring && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Songs list is empty, fetch to see some music!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this), !isLoading && !isRegistring && songs.map(e => /*#__PURE__*/_jsxDEV(SongComp, {\n          song: e\n        }, e.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 46\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(RegisterForm, {\n      submitionHandler: registration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SpoltifyApp, \"mps3zqw4CSyQzBmDBVvBCoSi/nA=\");\n\n_c = SpoltifyApp;\nexport default SpoltifyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpoltifyApp\");","map":{"version":3,"names":["React","SongComp","classes","RegisterForm","SpoltifyApp","isRegistring","setIsRegistring","useState","User","setUser","songs","setSongs","artists","setArtists","isLoading","setIsLoading","fetching","options","method","headers","fetch","then","response","json","songis","artis","key","song","console","log","track","external_urls","push","id","name","authorUrl","uri","author","preview","preview_url","img","album","images","url","duration","duration_ms","result","forEach","item","indexOf","catch","err","error","registration","pass","object","Name","Password","ok","Error","data","JSON","e","message","body","stringify","showForm","throwSongs","filtredSongs","filter","u","target","value","logoutHandler","nav","fetchbutton","user","logout","length","map","general"],"sources":["C:/Users/fabri/Desktop/gh-pages/music_page/src/components/SpoltifyApp.js"],"sourcesContent":["import React from 'react';\r\nimport SongComp from './SongComp';\r\nimport classes from './SongComp.module.css';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nconst SpoltifyApp = () => {\r\n    const [isRegistring, setIsRegistring] = React.useState(false);\r\n    const [User, setUser] = React.useState('');\r\n    const [songs, setSongs] = React.useState([]);\r\n    const [artists, setArtists] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n    const fetching = async function () {\r\n        setIsRegistring(false);\r\n        setIsLoading(true);\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-RapidAPI-Host': 'spotify23.p.rapidapi.com',\r\n                'X-RapidAPI-Key':\r\n                    'fbf0c29f17msh2ea8c42d058efb8p1cb340jsn87a4660d26d6',\r\n            },\r\n        };\r\n\r\n        await fetch(\r\n            'https://spotify23.p.rapidapi.com/playlist_tracks/?id=37i9dQZF1DX4Wsb4d7NKfP&offset=0&limit=100',\r\n            options\r\n        )\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                const songis = [];\r\n                const artis = [];\r\n                for (const key in response) {\r\n                    if (key === 'items') {\r\n                        for (const song of response[key]) {\r\n                            console.log(song.track.external_urls);\r\n                            songis.push({\r\n                                id: song.track.id,\r\n                                name: song.track.name,\r\n                                authorUrl: song.track.artists[0].uri,\r\n                                author: song.track.artists[0].name,\r\n                                preview: song.track.preview_url,\r\n                                img: song.track.album.images[0].url,\r\n                                url: song.track.external_urls,\r\n                                duration: song.track.duration_ms * 0.001,\r\n                            });\r\n                            artis.push(song.track.artists[0].name);\r\n                        }\r\n                    }\r\n                }\r\n                var result = [];\r\n                artis.forEach((item) => {\r\n                    if (result.indexOf(item) < 0) {\r\n                        result.push(item);\r\n                    }\r\n                });\r\n                setArtists(result);\r\n                setSongs(songis);\r\n            })\r\n            .catch((err) => console.error(err));\r\n        setIsLoading(false);\r\n    };\r\n\r\n    async function registration(name, pass) {\r\n        const object = { Name: name, Password: pass };\r\n        setIsRegistring(false);\r\n        setIsLoading(true);\r\n\r\n        try{\r\n            const response = await fetch('https://react-http-467cc-default-rtdb.firebaseio.com/users.json');\r\n            if(!response.ok){\r\n                throw new Error('Error while fetching');\r\n            }\r\n            const data = await response.JSON();\r\n            console.log(data);\r\n        }catch(e){\r\n            console.log(e.message);\r\n        }\r\n\r\n        try {\r\n            fetch(\r\n                'https://react-http-467cc-default-rtdb.firebaseio.com/users.json',\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(object),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                }\r\n            );\r\n        } catch (e) {\r\n            console.log(e.message);\r\n        }\r\n        setUser(name);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const showForm = () => {\r\n        setIsRegistring(true);\r\n    };\r\n\r\n    const throwSongs = (e) => {\r\n        const filtredSongs = songs.filter((u) => u.author === e.target.value);\r\n        setSongs(filtredSongs);\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        setUser('');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <nav className={classes.nav}>\r\n                <button className={classes.fetchbutton} onClick={fetching}>\r\n                    Fetch Songs\r\n                </button>\r\n                {!User ? (\r\n                    <button onClick={showForm} className={classes.fetchbutton}>\r\n                        Register / Login\r\n                    </button>\r\n                ) : (\r\n                    <>\r\n                        <button className={classes.user} disabled>\r\n                            {User}\r\n                        </button>\r\n                        <button\r\n                            onClick={logoutHandler}\r\n                            className={classes.logout}\r\n                        >\r\n                            Log Out\r\n                        </button>\r\n                    </>\r\n                )}\r\n            </nav>\r\n            {!isRegistring ? (\r\n                <div>\r\n                    {songs.length > 0 && (\r\n                        <div className={classes.filter}>\r\n                            <label>Filter by artist:</label>\r\n                            <select onChange={throwSongs}>\r\n                                {artists.map((e) => (\r\n                                    <option key={e} value={e}>\r\n                                        {e}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    )}\r\n                    <div className={classes.general}>\r\n                        {isLoading && <p>Loading...</p>}\r\n                        {songs.length === 0 && !isLoading && !isRegistring && (\r\n                            <p>Songs list is empty, fetch to see some music!</p>\r\n                        )}\r\n                        {!isLoading &&\r\n                            !isRegistring &&\r\n                            songs.map((e) => <SongComp key={e.id} song={e} />)}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <RegisterForm submitionHandler={registration} />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SpoltifyApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}