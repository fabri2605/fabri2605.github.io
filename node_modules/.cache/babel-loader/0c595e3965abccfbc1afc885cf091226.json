{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Desktop\\\\gh-pages\\\\music_page\\\\src\\\\components\\\\SpoltifyApp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SongComp from './SongComp';\nimport classes from './SongComp.module.css';\nimport RegisterForm from './RegisterForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SpoltifyApp = () => {\n  _s();\n\n  const [isRegistring, setIsRegistring] = React.useState(false);\n  const [User, setUser] = React.useState('');\n  const [songs, setSongs] = React.useState([]);\n  const [artists, setArtists] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const fetching = React.useCallback(async function () {\n    setIsRegistring(false);\n    setIsLoading(true);\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Host': 'spotify23.p.rapidapi.com',\n        'X-RapidAPI-Key': '8cc775c702msheb62061cb0adb6fp1957fcjsna06b77403272'\n      }\n    };\n    fetch('https://spotify23.p.rapidapi.com/playlist_tracks/?id=37i9dQZF1DX4Wsb4d7NKfP&offset=0&limit=100', options).then(response => response.json()).then(response => {\n      const songis = [];\n      const artis = [];\n\n      for (const key in response) {\n        if (key === 'items') {\n          for (const song of response[key]) {\n            console.log(song);\n            songis.push({\n              id: song.track.id,\n              name: song.track.name,\n              authorUrl: song.track.artists[0].uri,\n              author: song.track.artists[0].name,\n              preview: song.track.preview_url,\n              img: song.track.album.images[0].url,\n              url: song.track.external_urls.spoltify,\n              duration: song.track.duration_ms * 0.001\n            });\n            artis.push({\n              name: song.track.artists[0].name,\n              id: song.track.artists[0].id\n            });\n          }\n        }\n      }\n\n      setArtists(artis);\n      setSongs(songis);\n    }).catch(err => console.error(err));\n    setIsLoading(false);\n  }, []);\n\n  async function registration(name, pass) {\n    const object = {\n      Name: name,\n      Password: pass\n    };\n    setIsRegistring(false);\n    setIsLoading(true);\n\n    try {\n      const response = fetch('https://react-http-467cc-default-rtdb.firebaseio.com/users.json', {\n        method: 'POST',\n        body: JSON.stringify(object),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        setUser(name);\n      }\n    } catch (e) {\n      console.log(e.message);\n    }\n\n    setIsLoading(false);\n    console.log(User);\n  }\n\n  React.useEffect(() => {\n    fetching();\n  }, [fetching]);\n\n  const throwSongs = e => {\n    const filtredSongs = songs.filter(u => u.author === e.target.value);\n    setSongs(filtredSongs);\n  };\n\n  const registrationn = () => {\n    setIsRegistring(true);\n  };\n\n  const logoutHandler = () => {\n    setUser('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: classes.nav,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.fetchbutton,\n        onClick: fetching,\n        children: \"Fetch Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), !User ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: registrationn,\n        className: classes.fetchbutton,\n        children: \"Register / Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.user,\n          disabled: true,\n          children: User\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logoutHandler,\n          className: classes.logout,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), !isRegistring ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [songs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.filter,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Filter by artist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: throwSongs,\n          children: artists.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: e.name,\n            children: e.name\n          }, e.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.general,\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 39\n        }, this), songs.length === 0 && !isLoading && !isRegistring && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Songs list is empty, fetch to see some music!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this), !isLoading && !isRegistring && songs.map(e => /*#__PURE__*/_jsxDEV(SongComp, {\n          song: e\n        }, e.id + (Math.random() * 10).toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 46\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(RegisterForm, {\n      submitionHandler: registration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SpoltifyApp, \"Box1NjuVIdLtmGzwjsHR74mPByk=\");\n\n_c = SpoltifyApp;\nexport default SpoltifyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpoltifyApp\");","map":{"version":3,"names":["React","SongComp","classes","RegisterForm","SpoltifyApp","isRegistring","setIsRegistring","useState","User","setUser","songs","setSongs","artists","setArtists","isLoading","setIsLoading","fetching","useCallback","options","method","headers","fetch","then","response","json","songis","artis","key","song","console","log","push","id","track","name","authorUrl","uri","author","preview","preview_url","img","album","images","url","external_urls","spoltify","duration","duration_ms","catch","err","error","registration","pass","object","Name","Password","body","JSON","stringify","ok","e","message","useEffect","throwSongs","filtredSongs","filter","u","target","value","registrationn","logoutHandler","nav","fetchbutton","user","logout","length","map","general","Math","random","toString"],"sources":["C:/Users/fabri/Desktop/gh-pages/music_page/src/components/SpoltifyApp.js"],"sourcesContent":["import React from 'react';\r\nimport SongComp from './SongComp';\r\nimport classes from './SongComp.module.css';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nconst SpoltifyApp = () => {\r\n    const [isRegistring, setIsRegistring] = React.useState(false);\r\n    const [User, setUser] = React.useState('');\r\n    const [songs, setSongs] = React.useState([]);\r\n    const [artists, setArtists] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n    const fetching = React.useCallback(async function () {\r\n        setIsRegistring(false);\r\n        setIsLoading(true);\r\n\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-RapidAPI-Host': 'spotify23.p.rapidapi.com',\r\n                'X-RapidAPI-Key':\r\n                    '8cc775c702msheb62061cb0adb6fp1957fcjsna06b77403272',\r\n            },\r\n        };\r\n\r\n        fetch(\r\n            'https://spotify23.p.rapidapi.com/playlist_tracks/?id=37i9dQZF1DX4Wsb4d7NKfP&offset=0&limit=100',\r\n            options\r\n        )\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                const songis = [];\r\n                const artis = [];\r\n                for (const key in response) {\r\n                    if (key === 'items') {\r\n                        for (const song of response[key]) {\r\n                            console.log(song);\r\n                            songis.push({\r\n                                id: song.track.id,\r\n                                name: song.track.name,\r\n                                authorUrl: song.track.artists[0].uri,\r\n                                author: song.track.artists[0].name,\r\n                                preview: song.track.preview_url,\r\n                                img: song.track.album.images[0].url,\r\n                                url: song.track.external_urls.spoltify,\r\n                                duration: song.track.duration_ms * 0.001,\r\n                            });\r\n                            artis.push({name:song.track.artists[0].name, id:song.track.artists[0].id});\r\n                        }\r\n                    }\r\n                }\r\n                setArtists(artis);\r\n                setSongs(songis);\r\n            })\r\n            .catch((err) => console.error(err));\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    async function registration(name, pass) {\r\n        const object = { Name: name, Password: pass };\r\n        setIsRegistring(false);\r\n        setIsLoading(true);\r\n        try {\r\n            const response = fetch(\r\n                'https://react-http-467cc-default-rtdb.firebaseio.com/users.json',\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(object),\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                }\r\n            );\r\n\r\n            if (response.ok) {\r\n                setUser(name);\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message);\r\n        }\r\n        setIsLoading(false);\r\n        console.log(User);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetching();\r\n    }, [fetching]);\r\n\r\n    const throwSongs = (e) => {\r\n        const filtredSongs = songs.filter((u) => u.author === e.target.value);\r\n        setSongs(filtredSongs);\r\n    };\r\n\r\n    const registrationn = () => {\r\n        setIsRegistring(true);\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        setUser('');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <nav className={classes.nav}>\r\n                <button className={classes.fetchbutton} onClick={fetching}>\r\n                    Fetch Songs\r\n                </button>\r\n                {!User ? (\r\n                    <button\r\n                        onClick={registrationn}\r\n                        className={classes.fetchbutton}\r\n                    >\r\n                        Register / Login\r\n                    </button>\r\n                ) : (\r\n                    <>\r\n                        <button className={classes.user} disabled>\r\n                            {User}\r\n                        </button>\r\n                        <button\r\n                            onClick={logoutHandler}\r\n                            className={classes.logout}\r\n                        >\r\n                            Log Out\r\n                        </button>\r\n                    </>\r\n                )}\r\n            </nav>\r\n            {!isRegistring ? (\r\n                <div>\r\n                    {songs.length > 0 && (\r\n                        <div className={classes.filter}>\r\n                            <label>Filter by artist:</label>\r\n                            <select onChange={throwSongs}>\r\n                                {artists.map((e) => (\r\n                                    <option key={e.id} value={e.name}>\r\n                                        {e.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    )}\r\n                    <div className={classes.general}>\r\n                        {isLoading && <p>Loading...</p>}\r\n                        {songs.length === 0 && !isLoading && !isRegistring && (\r\n                            <p>Songs list is empty, fetch to see some music!</p>\r\n                        )}\r\n                        {!isLoading &&\r\n                            !isRegistring &&\r\n                            songs.map((e) => <SongComp key={e.id+(Math.random()*10).toString()} song={e} />)}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <RegisterForm submitionHandler={registration} />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SpoltifyApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}