{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Desktop\\\\gh-pages\\\\music_page\\\\src\\\\components\\\\SpoltifyApp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SongComp from './SongComp';\nimport classes from './SongComp.module.css';\nimport RegisterForm from './RegisterForm';\nimport MyLoader from './Loader/MyLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SpoltifyApp = () => {\n  _s();\n\n  const [isRegistring, setIsRegistring] = React.useState(false);\n  const [User, setUser] = React.useState(localStorage.getItem('isLogged'));\n  const [songs, setSongs] = React.useState([]);\n  const [filtredSongs, setFiltredSongs] = React.useState([]);\n  const [artists, setArtists] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [hasError, setHasError] = React.useState('');\n  const pageTitle = /*#__PURE__*/React.createRef();\n  const localUser = localStorage.getItem('isLogged');\n  const localFilter = localStorage.getItem('filtred');\n  const fetchingAlbum = React.useCallback(async function () {\n    setIsRegistring(false);\n    setIsLoading(true);\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '684f76f0f3msh78c59f0291915e8p1bc6c9jsn6b37b43baa62',\n        'X-RapidAPI-Host': 'spotify23.p.rapidapi.com'\n      }\n    };\n    await fetch('https://spotify23.p.rapidapi.com/album_tracks/?id=3IBcauSj5M2A6lTeffJzdv&offset=0&limit=300', options).then(response => response.json()).then(response => {\n      const songis = [];\n      const artis = [];\n      console.log(response);\n\n      for (const key in response) {\n        if (key === 'albums') {\n          for (const track in response[key][0]) {\n            console.log(track);\n          }\n        }\n      }\n    });\n  }, []);\n  /* const fetching = React.useCallback(\r\n      async function () {\r\n          setIsRegistring(false);\r\n          if (pageTitle.current.style === 'left') {\r\n          }\r\n          if (!localUser) {\r\n              setFiltredSongs('');\r\n              localStorage.setItem('filtred', '');\r\n              setHasError('You need to register first!');\r\n              return null;\r\n          } else if (songs.length > 0 && filtredSongs.length === 0) {\r\n              setFiltredSongs(songs);\r\n              return null;\r\n          } else if (filtredSongs.length > 0 && songs.length > 0) {\r\n              if (localFilter) {\r\n                  setFiltredSongs(\r\n                      songs.filter((u) => u.author === localFilter)\r\n                  );\r\n              } else {\r\n                  setFiltredSongs(songs);\r\n              }\r\n              return null;\r\n          }\r\n          setIsRegistring(false);\r\n          setIsLoading(true);\r\n            const options = {\r\n              method: 'GET',\r\n              headers: {\r\n                  'X-RapidAPI-Key':\r\n                      '684f76f0f3msh78c59f0291915e8p1bc6c9jsn6b37b43baa62',\r\n                  'X-RapidAPI-Host': 'spotify23.p.rapidapi.com',\r\n              },\r\n          };\r\n            await fetch(\r\n              'https://spotify23.p.rapidapi.com/playlist_tracks/?id=37i9dQZF1DX4Wsb4d7NKfP&offset=0&limit=100',\r\n              options\r\n          )\r\n              .then((response) => response.json())\r\n              .then((response) => {\r\n                  const songis = [];\r\n                  const artis = [];\r\n                  for (const key in response) {\r\n                      if (key === 'items') {\r\n                          for (const song of response[key]) {\r\n                              songis.push({\r\n                                  id: song.track.id,\r\n                                  name: song.track.name,\r\n                                  authorUrl: song.track.artists[0].uri,\r\n                                  author: song.track.artists[0].name,\r\n                                  preview: song.track.preview_url,\r\n                                  img: song.track.album.images[0].url,\r\n                                  url: song.track.external_urls,\r\n                                  duration: song.track.duration_ms * 0.001,\r\n                              });\r\n                              artis.push(song.track.artists[0].name);\r\n                          }\r\n                      }\r\n                  }\r\n                  var result = [];\r\n                  artis.sort();\r\n                  artis.forEach((item) => {\r\n                      if (result.indexOf(item) < 0) {\r\n                          result.push(item);\r\n                      }\r\n                  });\r\n                  setArtists(result);\r\n                  setSongs(songis);\r\n                  if (localFilter === 'All' || !localFilter) {\r\n                      console.log('localFilter == All || \"\"');\r\n                      setFiltredSongs(songis);\r\n                  } else {\r\n                      setFiltredSongs(\r\n                          songis.filter((u) => u.author === localFilter)\r\n                      );\r\n                  }\r\n              })\r\n              .catch((err) => {\r\n                  console.error(err.message);\r\n                  setHasError(err.message);\r\n              });\r\n          setIsLoading(false);\r\n      },\r\n      [User, localFilter, songs]\r\n  ); */\n\n  React.useEffect(() => {\n    if (localUser === !!User) {\n      setUser(localUser);\n    }\n\n    if (localFilter) {//fetching();\n    }\n  }, []);\n\n  async function registration(name, pass, isRegistred) {\n    setIsRegistring(false);\n    setIsLoading(true);\n    setHasError('');\n\n    if (!isRegistred) {\n      const object = {\n        Name: name,\n        Password: pass\n      };\n\n      try {\n        await fetch('https://react-http-467cc-default-rtdb.firebaseio.com/users.json', {\n          method: 'POST',\n          body: JSON.stringify(object),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      } catch (e) {\n        console.log(e.message);\n      }\n    } else {\n      pageTitle.current.innerHTML = 'Welcome back ' + name;\n    }\n\n    setUser(name);\n    localStorage.setItem('isLogged', name);\n    setIsLoading(false);\n  }\n\n  const showForm = () => {\n    setIsRegistring(true);\n  };\n\n  const throwSongs = e => {\n    if (e.target.value === 'All') {\n      setFiltredSongs(songs);\n      localStorage.setItem('filtred', '');\n    } else {\n      const filtredSongss = songs.filter(u => u.author === e.target.value);\n      setFiltredSongs(filtredSongss);\n      localStorage.setItem('filtred', e.target.value);\n    }\n  };\n\n  const logoutHandler = () => {\n    setUser('');\n    setFiltredSongs([]);\n    localStorage.setItem('isLogged', '');\n    localStorage.setItem('filtred', '');\n    pageTitle.current = 'MyMusicPage';\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: isLoading ? classes.loading + ' ' + classes.nav : classes.nav,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: pageTitle\n        /* className={algo ? '' : ''} */\n        ,\n        children: \"French Drillin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.fetchbutton,\n        onClick: fetchingAlbum(),\n        children: \"Fetch Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), !User ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showForm,\n        className: classes.fetchbutton,\n        children: \"Register / Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.user,\n          disabled: true,\n          children: User\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logoutHandler,\n          className: classes.logout,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), !isRegistring ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isLoading ? classes.loading : '',\n      children: [filtredSongs.length > 0 && User && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.filter,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Filter by artist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: throwSongs,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All\"\n          }, 'All', false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this), artists.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: e,\n            children: e\n          }, e, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }, this), isLoading && !hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MyLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.general,\n        children: [!hasError && filtredSongs.length === 0 && !isLoading && !isRegistring && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"nonFetchMsg\",\n          children: \"Songs list is empty, fetch to see some music!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 33\n        }, this), hasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: hasError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 38\n        }, this), !isLoading && !isRegistring && filtredSongs.length > 0 && User && filtredSongs.map(e => /*#__PURE__*/_jsxDEV(SongComp, {\n          song: e\n        }, e.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(RegisterForm, {\n      submitionHandler: registration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SpoltifyApp, \"P2gWeT/nuu0znGyHKDW1rQwVr+c=\");\n\n_c = SpoltifyApp;\nexport default SpoltifyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpoltifyApp\");","map":{"version":3,"names":["React","SongComp","classes","RegisterForm","MyLoader","SpoltifyApp","isRegistring","setIsRegistring","useState","User","setUser","localStorage","getItem","songs","setSongs","filtredSongs","setFiltredSongs","artists","setArtists","isLoading","setIsLoading","hasError","setHasError","pageTitle","createRef","localUser","localFilter","fetchingAlbum","useCallback","options","method","headers","fetch","then","response","json","songis","artis","console","log","key","track","useEffect","registration","name","pass","isRegistred","object","Name","Password","body","JSON","stringify","e","message","current","innerHTML","setItem","showForm","throwSongs","target","value","filtredSongss","filter","u","author","logoutHandler","loading","nav","fetchbutton","user","logout","length","map","general","id"],"sources":["C:/Users/fabri/Desktop/gh-pages/music_page/src/components/SpoltifyApp.js"],"sourcesContent":["import React from 'react';\r\nimport SongComp from './SongComp';\r\nimport classes from './SongComp.module.css';\r\nimport RegisterForm from './RegisterForm';\r\nimport MyLoader from './Loader/MyLoader';\r\n\r\nconst SpoltifyApp = () => {\r\n    const [isRegistring, setIsRegistring] = React.useState(false);\r\n    const [User, setUser] = React.useState(localStorage.getItem('isLogged'));\r\n    const [songs, setSongs] = React.useState([]);\r\n    const [filtredSongs, setFiltredSongs] = React.useState([]);\r\n    const [artists, setArtists] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [hasError, setHasError] = React.useState('');\r\n    const pageTitle = React.createRef();\r\n    const localUser = localStorage.getItem('isLogged');\r\n    const localFilter = localStorage.getItem('filtred');\r\n\r\n    const fetchingAlbum = React.useCallback(async function () {\r\n        setIsRegistring(false);\r\n        setIsLoading(true);\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-RapidAPI-Key':\r\n                    '684f76f0f3msh78c59f0291915e8p1bc6c9jsn6b37b43baa62',\r\n                'X-RapidAPI-Host': 'spotify23.p.rapidapi.com',\r\n            },\r\n        };\r\n\r\n        await fetch(\r\n            'https://spotify23.p.rapidapi.com/album_tracks/?id=3IBcauSj5M2A6lTeffJzdv&offset=0&limit=300',\r\n            options\r\n        )\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                const songis = [];\r\n                const artis = [];\r\n                console.log(response);\r\n                for (const key in response) {\r\n                    if (key === 'albums') {\r\n                        for (const track in response[key][0]){\r\n                            console.log(track);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    /* const fetching = React.useCallback(\r\n        async function () {\r\n            setIsRegistring(false);\r\n            if (pageTitle.current.style === 'left') {\r\n            }\r\n            if (!localUser) {\r\n                setFiltredSongs('');\r\n                localStorage.setItem('filtred', '');\r\n                setHasError('You need to register first!');\r\n                return null;\r\n            } else if (songs.length > 0 && filtredSongs.length === 0) {\r\n                setFiltredSongs(songs);\r\n                return null;\r\n            } else if (filtredSongs.length > 0 && songs.length > 0) {\r\n                if (localFilter) {\r\n                    setFiltredSongs(\r\n                        songs.filter((u) => u.author === localFilter)\r\n                    );\r\n                } else {\r\n                    setFiltredSongs(songs);\r\n                }\r\n                return null;\r\n            }\r\n            setIsRegistring(false);\r\n            setIsLoading(true);\r\n\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'X-RapidAPI-Key':\r\n                        '684f76f0f3msh78c59f0291915e8p1bc6c9jsn6b37b43baa62',\r\n                    'X-RapidAPI-Host': 'spotify23.p.rapidapi.com',\r\n                },\r\n            };\r\n\r\n            await fetch(\r\n                'https://spotify23.p.rapidapi.com/playlist_tracks/?id=37i9dQZF1DX4Wsb4d7NKfP&offset=0&limit=100',\r\n                options\r\n            )\r\n                .then((response) => response.json())\r\n                .then((response) => {\r\n                    const songis = [];\r\n                    const artis = [];\r\n                    for (const key in response) {\r\n                        if (key === 'items') {\r\n                            for (const song of response[key]) {\r\n                                songis.push({\r\n                                    id: song.track.id,\r\n                                    name: song.track.name,\r\n                                    authorUrl: song.track.artists[0].uri,\r\n                                    author: song.track.artists[0].name,\r\n                                    preview: song.track.preview_url,\r\n                                    img: song.track.album.images[0].url,\r\n                                    url: song.track.external_urls,\r\n                                    duration: song.track.duration_ms * 0.001,\r\n                                });\r\n                                artis.push(song.track.artists[0].name);\r\n                            }\r\n                        }\r\n                    }\r\n                    var result = [];\r\n                    artis.sort();\r\n                    artis.forEach((item) => {\r\n                        if (result.indexOf(item) < 0) {\r\n                            result.push(item);\r\n                        }\r\n                    });\r\n                    setArtists(result);\r\n                    setSongs(songis);\r\n                    if (localFilter === 'All' || !localFilter) {\r\n                        console.log('localFilter == All || \"\"');\r\n                        setFiltredSongs(songis);\r\n                    } else {\r\n                        setFiltredSongs(\r\n                            songis.filter((u) => u.author === localFilter)\r\n                        );\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err.message);\r\n                    setHasError(err.message);\r\n                });\r\n            setIsLoading(false);\r\n        },\r\n        [User, localFilter, songs]\r\n    ); */\r\n\r\n    React.useEffect(() => {\r\n        if (localUser === !!User) {\r\n            setUser(localUser);\r\n        }\r\n        if (localFilter) {\r\n            //fetching();\r\n        }\r\n    }, []);\r\n\r\n    async function registration(name, pass, isRegistred) {\r\n        setIsRegistring(false);\r\n        setIsLoading(true);\r\n        setHasError('');\r\n        if (!isRegistred) {\r\n            const object = { Name: name, Password: pass };\r\n\r\n            try {\r\n                await fetch(\r\n                    'https://react-http-467cc-default-rtdb.firebaseio.com/users.json',\r\n                    {\r\n                        method: 'POST',\r\n                        body: JSON.stringify(object),\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                    }\r\n                );\r\n            } catch (e) {\r\n                console.log(e.message);\r\n            }\r\n        } else {\r\n            pageTitle.current.innerHTML = 'Welcome back ' + name;\r\n        }\r\n        setUser(name);\r\n        localStorage.setItem('isLogged', name);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const showForm = () => {\r\n        setIsRegistring(true);\r\n    };\r\n\r\n    const throwSongs = (e) => {\r\n        if (e.target.value === 'All') {\r\n            setFiltredSongs(songs);\r\n            localStorage.setItem('filtred', '');\r\n        } else {\r\n            const filtredSongss = songs.filter(\r\n                (u) => u.author === e.target.value\r\n            );\r\n            setFiltredSongs(filtredSongss);\r\n            localStorage.setItem('filtred', e.target.value);\r\n        }\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        setUser('');\r\n        setFiltredSongs([]);\r\n        localStorage.setItem('isLogged', '');\r\n        localStorage.setItem('filtred', '');\r\n        pageTitle.current = 'MyMusicPage';\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <nav\r\n                className={\r\n                    isLoading\r\n                        ? classes.loading + ' ' + classes.nav\r\n                        : classes.nav\r\n                }\r\n            >\r\n                <p ref={pageTitle} /* className={algo ? '' : ''} */>\r\n                    French Drillin\r\n                </p>\r\n                <button className={classes.fetchbutton} onClick={fetchingAlbum()}>\r\n                    Fetch Songs\r\n                </button>\r\n                {!User ? (\r\n                    <button onClick={showForm} className={classes.fetchbutton}>\r\n                        Register / Login\r\n                    </button>\r\n                ) : (\r\n                    <>\r\n                        <button className={classes.user} disabled>\r\n                            {User}\r\n                        </button>\r\n                        <button\r\n                            onClick={logoutHandler}\r\n                            className={classes.logout}\r\n                        >\r\n                            Log Out\r\n                        </button>\r\n                    </>\r\n                )}\r\n            </nav>\r\n            {!isRegistring ? (\r\n                <div className={isLoading ? classes.loading : ''}>\r\n                    {filtredSongs.length > 0 && User && (\r\n                        <div className={classes.filter}>\r\n                            <label>Filter by artist:</label>\r\n                            <select onChange={throwSongs}>\r\n                                <option key='All' value='All'>\r\n                                    All\r\n                                </option>\r\n                                {artists.map((e) => (\r\n                                    <option key={e} value={e}>\r\n                                        {e}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    )}\r\n                    {isLoading && !hasError && (\r\n                        <div>\r\n                            <MyLoader></MyLoader>\r\n                        </div>\r\n                    )}\r\n                    <div className={classes.general}>\r\n                        {!hasError &&\r\n                            filtredSongs.length === 0 &&\r\n                            !isLoading &&\r\n                            !isRegistring && (\r\n                                <p id='nonFetchMsg'>\r\n                                    Songs list is empty, fetch to see some\r\n                                    music!\r\n                                </p>\r\n                            )}\r\n                        {hasError && <p>{hasError}</p>}\r\n                        {!isLoading &&\r\n                            !isRegistring &&\r\n                            filtredSongs.length > 0 &&\r\n                            User &&\r\n                            filtredSongs.map((e) => (\r\n                                <SongComp key={e.id} song={e} />\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <RegisterForm submitionHandler={registration} />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SpoltifyApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}